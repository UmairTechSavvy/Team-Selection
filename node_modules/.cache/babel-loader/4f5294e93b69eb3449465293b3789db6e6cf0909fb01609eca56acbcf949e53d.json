{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Desktop\\\\react\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// App.js\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Employee from \"./Employee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedTeam, setTeam] = useState(\"TeamB\");\n  const [employees, setEmployees] = useState([{\n    id: 1,\n    name: \"umair\",\n    sex: \"male\",\n    designation: \"full stack developer\",\n    TeamName: \"TeamA\"\n  }, {\n    id: 2,\n    name: \"john\",\n    sex: \"male\",\n    designation: \"backend developer\",\n    TeamName: \"TeamB\"\n  }, {\n    id: 3,\n    name: \"saif\",\n    sex: \"male\",\n    designation: \"React developer\",\n    TeamName: \"TeamA\"\n  }, {\n    id: 4,\n    name: \"amna\",\n    sex: \"female\",\n    designation: \"cyber security specialist\",\n    TeamName: \"TeamA\"\n  }, {\n    id: 5,\n    name: \"khan\",\n    sex: \"male\",\n    designation: \"intern\",\n    TeamName: \"TeamC\"\n  }, {\n    id: 6,\n    name: \"michael\",\n    sex: \"male\",\n    designation: \"full stack developer\",\n    TeamName: \"TeamA\"\n  }, {\n    id: 7,\n    name: \"serena\",\n    sex: \"female\",\n    designation: \"backend developer\",\n    TeamName: \"TeamC\"\n  }]);\n  function TeamSelection(event) {\n    console.log(event.target.value);\n    setTeam(event.target.value);\n  }\n  const handleEmployeeCardClick = event => {\n    const clickedEmployeeId = parseInt(event.currentTarget.id);\n    const transformedEmployees = employees.map(employee => {\n      if (employee.id === clickedEmployeeId) {\n        if (employee.TeamName === selectedTeam) {\n          return {\n            ...employee,\n            TeamName: \" \"\n          };\n        } else {\n          return {\n            ...employee,\n            TeamName: selectedTeam\n          };\n        }\n      } else {\n        return employee;\n      }\n    });\n    setEmployees(transformedEmployees);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Employee, {\n      handleEmployeeCardClick: handleEmployeeCardClick,\n      TeamSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7hAUkaNjIMSBsPOs3T4lCHOFB6w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Footer","Employee","jsxDEV","_jsxDEV","App","_s","selectedTeam","setTeam","useState","employees","setEmployees","id","name","sex","designation","TeamName","TeamSelection","event","console","log","target","value","handleEmployeeCardClick","clickedEmployeeId","parseInt","currentTarget","transformedEmployees","map","employee","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aser/Desktop/react/src/App.jsx"],"sourcesContent":["// App.js\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Employee from \"./Employee\";\r\n\r\nfunction App() {\r\n  const [selectedTeam, setTeam] = useState(\"TeamB\");\r\n\r\n  const [employees, setEmployees] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"umair\",\r\n      sex: \"male\",\r\n      designation: \"full stack developer\",\r\n      TeamName: \"TeamA\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"john\",\r\n      sex: \"male\",\r\n      designation: \"backend developer\",\r\n      TeamName: \"TeamB\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"saif\",\r\n      sex: \"male\",\r\n      designation: \"React developer\",\r\n      TeamName: \"TeamA\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"amna\",\r\n      sex: \"female\",\r\n      designation: \"cyber security specialist\",\r\n      TeamName: \"TeamA\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"khan\",\r\n      sex: \"male\",\r\n      designation: \"intern\",\r\n      TeamName: \"TeamC\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"michael\",\r\n      sex: \"male\",\r\n      designation: \"full stack developer\",\r\n      TeamName: \"TeamA\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"serena\",\r\n      sex: \"female\",\r\n      designation: \"backend developer\",\r\n      TeamName: \"TeamC\",\r\n    },\r\n  ]);\r\n\r\n  function TeamSelection(event) {\r\n    console.log(event.target.value);\r\n    setTeam(event.target.value);\r\n  }\r\n\r\n  const handleEmployeeCardClick = (event) => {\r\n    const clickedEmployeeId = parseInt(event.currentTarget.id);\r\n    const transformedEmployees = employees.map((employee) => {\r\n      if (employee.id === clickedEmployeeId) {\r\n        if (employee.TeamName === selectedTeam) {\r\n          return { ...employee, TeamName: \" \" };\r\n        } else {\r\n          return { ...employee, TeamName: selectedTeam };\r\n        }\r\n      } else {\r\n        return employee;\r\n      }\r\n    });\r\n    setEmployees(transformedEmployees);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Employee  handleEmployeeCardClick={handleEmployeeCardClick}\r\n                 \r\n                 TeamSelection\r\n      \r\n      \r\n      \r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}