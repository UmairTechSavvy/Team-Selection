{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aser\\\\Desktop\\\\react\\\\src\\\\GroupedTeamMembers.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupedTeamMembers = ({\n  employees,\n  setTeam,\n  selectedTeam\n}) => {\n  _s();\n  const [groupedMember, setGroupedMembers] = useState(GroupedTeamMembers());\n  const Allocation = () => {\n    var teams = [];\n    let teamMembers = employees.filter(employee => employee.TeamName === 'TeamA');\n    let MembersA = {\n      Team: 'Team A',\n      memebers: teamMembers,\n      collapsed: selectedTeam === 'Team A' ? false : true\n    };\n    teams.push(MembersA);\n    let teamMembersB = employees.filter(employee => employee.TeamName === 'TeamB');\n    let MembersB = {\n      Team: 'Team B',\n      memebers: teamMembersB,\n      collapsed: selectedTeam === 'Team B' ? false : true\n    };\n    teams.push(MembersB);\n    let teamMembersC = employees.filter(employee => employee.TeamName === 'TeamC');\n    let MembersC = {\n      Team: 'Team C',\n      memebers: teamMembers,\n      collapsed: selectedTeam === 'Team C' ? false : true\n    };\n    teams.push(MembersC);\n    return teams;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: groupedMember.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-2\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this)\n      }, item.item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 3\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupedTeamMembers, \"sSivkj/uBdHOnxv2FiUB+keb9wU=\");\n_c = GroupedTeamMembers;\nexport default GroupedTeamMembers;\nvar _c;\n$RefreshReg$(_c, \"GroupedTeamMembers\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","GroupedTeamMembers","employees","setTeam","selectedTeam","_s","groupedMember","setGroupedMembers","Allocation","teams","teamMembers","filter","employee","TeamName","MembersA","Team","memebers","collapsed","push","teamMembersB","MembersB","teamMembersC","MembersC","className","children","map","item","style","cursor","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aser/Desktop/react/src/GroupedTeamMembers.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\n\r\nconst GroupedTeamMembers = ({employees,setTeam,selectedTeam}) => {\r\n\r\nconst [groupedMember , setGroupedMembers] = useState(GroupedTeamMembers())\r\n\r\nconst Allocation = ()=>{\r\n  var teams = []\r\n\r\n  let teamMembers = employees.filter((employee)=> employee.TeamName === 'TeamA')\r\n\r\n  let MembersA = {Team:'Team A' , memebers: teamMembers , collapsed:selectedTeam === 'Team A' ? false:true }\r\n  teams.push(MembersA)\r\n\r\n  let teamMembersB = employees.filter((employee)=> employee.TeamName === 'TeamB')\r\n\r\n  let MembersB = {Team:'Team B' , memebers: teamMembersB , collapsed:selectedTeam === 'Team B' ? false:true }\r\n  teams.push(MembersB)\r\n\r\n  let teamMembersC = employees.filter((employee)=> employee.TeamName === 'TeamC')\r\n\r\n  let MembersC = {Team:'Team C' , memebers: teamMembers , collapsed:selectedTeam === 'Team C' ? false:true }\r\n  teams.push(MembersC)\r\n\r\n  return teams\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"container\">\r\n   \r\n    {\r\n\r\n     groupedMember.map((item) =>{\r\n\r\nreturn(\r\n\r\n  <div  key={item.item} className=\"card mt-2\" style={{cursor:\"pointer\"}} >\r\n\r\n    <h4 id=\"\">\r\n\r\n\r\n\r\n    </h4>\r\n\r\n\r\n  </div>\r\n\r\n \r\n\r\n\r\n\r\n\r\n)\r\n\r\n  }  )\r\n  \r\n\r\n    }\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default GroupedTeamMembers;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,MAAMC,kBAAkB,GAAGA,CAAC;EAACC,SAAS;EAACC,OAAO;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAEjE,MAAM,CAACC,aAAa,EAAGC,iBAAiB,CAAC,GAAGT,QAAQ,CAACG,kBAAkB,CAAC,CAAC,CAAC;EAE1E,MAAMO,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAIC,KAAK,GAAG,EAAE;IAEd,IAAIC,WAAW,GAAGR,SAAS,CAACS,MAAM,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,KAAK,OAAO,CAAC;IAE9E,IAAIC,QAAQ,GAAG;MAACC,IAAI,EAAC,QAAQ;MAAGC,QAAQ,EAAEN,WAAW;MAAGO,SAAS,EAACb,YAAY,KAAK,QAAQ,GAAG,KAAK,GAAC;IAAK,CAAC;IAC1GK,KAAK,CAACS,IAAI,CAACJ,QAAQ,CAAC;IAEpB,IAAIK,YAAY,GAAGjB,SAAS,CAACS,MAAM,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,KAAK,OAAO,CAAC;IAE/E,IAAIO,QAAQ,GAAG;MAACL,IAAI,EAAC,QAAQ;MAAGC,QAAQ,EAAEG,YAAY;MAAGF,SAAS,EAACb,YAAY,KAAK,QAAQ,GAAG,KAAK,GAAC;IAAK,CAAC;IAC3GK,KAAK,CAACS,IAAI,CAACE,QAAQ,CAAC;IAEpB,IAAIC,YAAY,GAAGnB,SAAS,CAACS,MAAM,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,KAAK,OAAO,CAAC;IAE/E,IAAIS,QAAQ,GAAG;MAACP,IAAI,EAAC,QAAQ;MAAGC,QAAQ,EAAEN,WAAW;MAAGO,SAAS,EAACb,YAAY,KAAK,QAAQ,GAAG,KAAK,GAAC;IAAK,CAAC;IAC1GK,KAAK,CAACS,IAAI,CAACI,QAAQ,CAAC;IAEpB,OAAOb,KAAK;EACd,CAAC;EAQC,oBACET,OAAA;IAAMuB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAI1BlB,aAAa,CAACmB,GAAG,CAAEC,IAAI,IAAI;MAEhC,oBAEE1B,OAAA;QAAsBuB,SAAS,EAAC,WAAW;QAACI,KAAK,EAAE;UAACC,MAAM,EAAC;QAAS,CAAE;QAAAJ,QAAA,eAEpExB,OAAA;UAAI6B,EAAE,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIL;MAAC,GANIP,IAAI,CAACA,IAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASf,CAAC;IASN,CAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKI,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAjEIJ,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AAmExB,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}